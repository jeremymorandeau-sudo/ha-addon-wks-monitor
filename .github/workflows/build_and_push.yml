name: Auto Build, Publish & Tag WKS Monitor

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write     # permet de pousser version + tag
      packages: write     # permet de publier sur GHCR
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up yq
        uses: mikefarah/yq@v4.44.2

      # ðŸ§© Lecture de la version actuelle (gÃ¨re "auto" ou vide)
      - name: Determine version
        id: version
        run: |
          RAW=$(yq '.version' wks-monitor/config.yaml | tr -d '"')
          if [[ "$RAW" == "auto" || -z "$RAW" ]]; then
            RAW="0.0.0"
          fi
          echo "Current version: $RAW"
          echo "current=$RAW" >> $GITHUB_OUTPUT

      # ðŸ§© IncrÃ©mentation robuste du numÃ©ro de version (patch)
      - name: Increment patch version
        id: bump
        run: |
          IFS='.' read -r MAJ MIN PATCH <<< "${{ steps.version.outputs.current }}"
          if [[ -z "$MAJ" || -z "$MIN" || -z "$PATCH" ]]; then
            MAJ=1; MIN=0; PATCH=0
          fi
          NEW="$MAJ.$MIN.$((PATCH+1))"
          echo "Bumping to version $NEW"
          yq -i ".version = \"$NEW\"" wks-monitor/config.yaml
          echo "new=$NEW" >> $GITHUB_OUTPUT

      # ðŸ§© Commit et push du config.yaml mis Ã  jour
      - name: Commit and push updated config.yaml
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add wks-monitor/config.yaml
          git commit -m "ðŸ”– Bump version to ${{ steps.bump.outputs.new }}" || echo "No changes to commit"
          git push

      # ðŸ§© Build Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./wks-monitor
          file: ./wks-monitor/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/wks-monitor-amd64:${{ steps.bump.outputs.new }}
            ghcr.io/${{ github.repository_owner }}/wks-monitor-amd64:latest

      # ðŸ§© CrÃ©er un tag GitHub et une release
      - name: Create Git Tag and Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.bump.outputs.new }}
          name: "Version ${{ steps.bump.outputs.new }}"
          body: |
            ðŸš€ Nouvelle version publiÃ©e automatiquement.
            - Docker image: `ghcr.io/${{ github.repository_owner }}/wks-monitor-amd64:${{ steps.bump.outputs.new }}`
            - Tag: `v${{ steps.bump.outputs.new }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # âœ… RÃ©sumÃ© dans les logs Actions
      - name: Summary
        run: echo "âœ… Version ${{ steps.bump.outputs.new }} publiÃ©e et taggÃ©e avec succÃ¨s !"
